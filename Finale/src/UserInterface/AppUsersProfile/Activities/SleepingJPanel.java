/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AppUsersProfile.Activities;

import Business.Appliances.Appliance;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Patient.VitalSign;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.ActivityWorkRequest;
import com.alee.extended.panel.SingleAlignPanel;
import com.alee.extended.window.PopOverDirection;
import com.alee.extended.window.WebPopOver;
import com.alee.laf.button.WebButton;
import com.alee.laf.label.WebLabel;
import java.awt.CardLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class SleepingJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private WebPopOver webPopOver;

    /**
     * Creates new form RequestLabTestJPanel
     */
    public SleepingJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, String msg) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        activityTextField.setText(msg);
        populateMusicTypeComboBox();
        webPopOver = new WebPopOver();
    }

    public void populateMusicTypeComboBox() {
        musicComboBox.removeAllItems();
        musicComboBox.addItem("No Music");
        musicComboBox.addItem("Light");
        musicComboBox.addItem("Soft Notes");
        musicComboBox.addItem("Deep Sleep");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        activityTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        musicComboBox = new javax.swing.JComboBox();
        btnPerformActivity = new com.alee.laf.button.WebButton();
        jLabel4 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1025, 682));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel1.setText("Message");
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 25));

        activityTextField.setEditable(false);
        activityTextField.setPreferredSize(new java.awt.Dimension(150, 25));
        activityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityTextFieldActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel2.setText("Music Type");
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 25));

        musicComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        musicComboBox.setPreferredSize(new java.awt.Dimension(150, 25));

        btnPerformActivity.setText("Perform Activity");
        btnPerformActivity.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        btnPerformActivity.setPreferredSize(new java.awt.Dimension(150, 25));
        btnPerformActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerformActivityActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Activity Window");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(activityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(musicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnPerformActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel4)))
                .addGap(339, 339, 339))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addGap(944, 944, 944))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel4)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(musicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80)
                .addComponent(btnPerformActivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(backJButton)
                .addGap(198, 198, 198))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closePopOverDialogs() {

        webPopOver.dispose();

    }

    private WebPopOver createPopOver() {
        final WebPopOver popOver = new WebPopOver(this);
        popOver.setMargin(10);
        popOver.setFocusableWindowState(false);
        GridLayout grid = new GridLayout(userAccount.getApplianceDirectory().getApplianceList().size(), 1);
        popOver.setLayout(grid);
        popOver.add(new WebLabel("Activity is " + activityTextField.getText()), grid);
        for (Appliance app1 : userAccount.getApplianceDirectory().getApplianceList()) {
            if (app1.getAppInfo() != null) {
                popOver.add(new WebLabel(app1.getApplianceName() + " : " + app1.getAppInfo()), grid);
            }
        }
        popOver.add(new SingleAlignPanel(new WebButton("Close pop-over", new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                popOver.dispose();
            }
        }), SingleAlignPanel.RIGHT).setMargin(10, 0, 0, 0));

        popOver.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(final WindowEvent e) {
                webPopOver.remove(popOver);
            }
        });
        return popOver;
    }

    public void ChangeApplianceInformation() {
        for (Appliance appliance : userAccount.getApplianceDirectory().getApplianceList()) {
            if (appliance.getApplianceName().equalsIgnoreCase("Automatic Kettle")) {
                appliance.setAppInfo("Kettle is turned OFF");
            }
            if (appliance.getApplianceName().equalsIgnoreCase("Music Player")) {
                appliance.setAppInfo(musicComboBox.getSelectedItem().toString());
            }
            if (appliance.getApplianceName().equalsIgnoreCase("Lights")) {
                appliance.setAppInfo("Lights are Out");
            }
            if (appliance.getApplianceName().equalsIgnoreCase("Home Thermostat")) {
                appliance.setAppInfo("Slightly cooler evironment");
            }
        }
    }

    public float idealRespiratoryRate() {
        return (float) (16 + Math.random() * (20 - 16));
    }

    public float idealHeartRate() {
        return (float) (100 + Math.random() * (100 - 170));
    }

    public float idealBloodPressure() {
        return (float) (90 + Math.random() * (120 - 90));
    }

    public float idealTemperature() {
        return (float) (96 + Math.random() * (99 - 96));
    }

    public VitalSign randomVitalsData() {
        float respiratoryRate = idealRespiratoryRate();
        float heartRate = idealHeartRate();
        float bloodPressure = idealBloodPressure();
        float temperature = idealTemperature();
        VitalSign vital = userAccount.getPatient().getVitalSignHistory().addVitalSign(respiratoryRate, heartRate, bloodPressure, temperature);
        return vital;
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void activityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activityTextFieldActionPerformed

    private void btnPerformActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerformActivityActionPerformed
        // TODO add your handling code here:
        String message = activityTextField.getText();
        ActivityWorkRequest request = new ActivityWorkRequest();
        request.setMessage(message);
        request.setRequestType("Activity");
        request.setSender(userAccount);
        request.setStatus("Sent");
        request.setVitalSign(randomVitalsData());

        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof DoctorOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }

        ChangeApplianceInformation();
        try {
            webPopOver.add(createPopOver().show(btnPerformActivity,PopOverDirection.up));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnPerformActivityActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activityTextField;
    private javax.swing.JButton backJButton;
    private com.alee.laf.button.WebButton btnPerformActivity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox musicComboBox;
    // End of variables declaration//GEN-END:variables
}
