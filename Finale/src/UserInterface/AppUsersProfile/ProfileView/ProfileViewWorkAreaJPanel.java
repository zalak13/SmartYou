/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AppUsersProfile.ProfileView;

import Business.Appliances.Appliance;
import Business.EcoSystem;
import Business.Patient.VitalSign;
import Business.UserAccount.UserAccount;
import com.alee.extended.window.PopOverDirection;
import com.alee.extended.window.WebPopOver;
import com.alee.laf.button.WebButton;
import com.alee.laf.label.WebLabel;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.JPanel;

/**
 *
 * @author Zak
 */
public class ProfileViewWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private List<WebPopOver> toClose;
    public static float idealBloodPressure=105;
    public static float idealRespiratoryRate=18;
    public static float idealHeartRate=135;
    public static float idealTemperature=97;
    

    /**
     * Creates new form ProfileViewWorkAreaJPanel
     */
    public ProfileViewWorkAreaJPanel(JPanel upc, EcoSystem e, UserAccount ua) {
        initComponents();
        userProcessContainer = upc;
        userAccount = ua;
        business = e;
        toClose = new ArrayList<WebPopOver>(3);
        resizing();

    }

    public void resizing() {
        BufferedImage img = null;
        String gender = userAccount.getEmployee().getGender();
        try {
            if(gender.equalsIgnoreCase("Male")){
                img = ImageIO.read(getClass().getResource("/images/male.png"));
            }else if(gender.equalsIgnoreCase("Female")){
                img = ImageIO.read(getClass().getResource("/images/female.png"));
            } else
            img = ImageIO.read(getClass().getResource("/images/anonymous.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance(webButton1.getPreferredSize().width, webButton1.getPreferredSize().height, Image.SCALE_SMOOTH);
        webButton1.setIcon(new javax.swing.ImageIcon(dimg));
    }

    public String getHealthStatus(){
        String Stat = "";
        ArrayList<VitalSign> vlist = userAccount.getPatient().getVitalSignHistory().getVitalSignList();
        VitalSign vs = vlist.get(vlist.size()-1);
        float bp=vs.getBloodPressure();
        float hr =vs.getHeartRate();
        float rr=vs.getRespiratoryRate();
        float temp=vs.getTemperature();
        if (isBetween(Math.abs(bp-idealBloodPressure),0,15) && isBetween(Math.abs(rr-idealRespiratoryRate),0,4) && isBetween(Math.abs(hr-idealHeartRate),0,35)
                && isBetween(Math.abs(temp-idealTemperature),0,2)){
            Stat="Looks Great";
        }else if (isBetween(Math.abs(bp-idealBloodPressure),15,30) && isBetween(Math.abs(rr-idealRespiratoryRate),4,6) && isBetween(Math.abs(hr-idealHeartRate),35,60)
                && isBetween(Math.abs(temp-idealTemperature),2,3)){
            Stat="Good";
        }else if (isBetween(Math.abs(bp-idealBloodPressure),30,40) && isBetween(Math.abs(rr-idealRespiratoryRate),6,10) && isBetween(Math.abs(hr-idealHeartRate),60,80)
                && isBetween(Math.abs(temp-idealTemperature),3,4)){
            Stat="Looks Bad";
        }else if (isBetween(Math.abs(bp-idealBloodPressure),40,60) && isBetween(Math.abs(rr-idealRespiratoryRate),10,20) && isBetween(Math.abs(hr-idealHeartRate),80,100)
                && isBetween(Math.abs(temp-idealTemperature),4,10)){
            Stat="Need Assistance";
        }else
        Stat="Check the Health Monitors";
        return Stat; 
    }
    
    public static boolean isBetween(Double x, int lower, int upper) {
        return lower <= x && x <= upper;
    }
    public static boolean isBetween(int x, int lower, int upper) {
        return lower <= x && x <= upper;
    }
    
     public static boolean isBetween(float x, int lower, int upper) {
        return lower <= x && x <= upper;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webButton1 = new com.alee.laf.button.WebButton();
        backJButton = new javax.swing.JButton();

        setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1025, 682));

        webButton1.setToolTipText("Click to see the Overview");
        webButton1.setMaximumSize(null);
        webButton1.setMinimumSize(null);
        webButton1.setPreferredSize(new java.awt.Dimension(300, 300));
        webButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton1ActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(415, 415, 415))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(backJButton)
                .addGap(71, 71, 71))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void webButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton1ActionPerformed
        // TODO add your handling code here:
        if (toClose.size() > 0) {
            closePopOverDialogs();
        } else {
            final WebButton source = (WebButton) evt.getSource();
            toClose.add(createHealthPopOver().show(source, PopOverDirection.up));
            toClose.add(createFinancePopOver().show(source, PopOverDirection.left));
            toClose.add(createHomeMakerPopOver().show(source, PopOverDirection.right));
        }
    }//GEN-LAST:event_webButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        closePopOverDialogs();
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private WebPopOver createHealthPopOver() {
        final WebPopOver popOver = new WebPopOver(this);
        popOver.setMargin(10);
        GridLayout grid = new GridLayout(userAccount.getApplianceDirectory().getApplianceList().size(), 1);
        popOver.setLayout(grid);
        ArrayList<VitalSign> vlist = userAccount.getPatient().getVitalSignHistory().getVitalSignList();
        VitalSign vs = vlist.get(vlist.size()-1);
        float bp=vs.getBloodPressure();
        float hr =vs.getHeartRate();
        float rr=vs.getRespiratoryRate();
        float temp=vs.getTemperature();
        popOver.add(new WebLabel("<html><b style=color:blue>Health Profile</b></html>"), grid);
        popOver.add(new WebLabel("<html><b>Health Status: </b><i>" + getHealthStatus()+"</i></html>"), grid);
        popOver.add(new WebLabel("<html><b>Current Blood Pressure: </b><i>" + bp+"</i></html>"), grid);
        popOver.add(new WebLabel("<html><b>Current Pulse Rate: </b><i>" + hr+"</i></html>"), grid);
        popOver.add(new WebLabel("<html><b>Current Repiratory Rate: </b><i>" + rr+"</i></html>"), grid);
        popOver.add(new WebLabel("<html><b>Current Body Temperature: </b><i>" + temp+"</i></html>"), grid);
        //popOver.setFocusableWindowState(false);
        popOver.add(new WebButton(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                closePopOverDialogs();
            }
        }).setUndecorated(true), BorderLayout.EAST);
        popOver.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(final WindowEvent e) {
                toClose.remove(popOver);
            }
        });
        return popOver;
    }

    public String getFinancialHealth() {
        String Status = "";
        if (isBetween(userAccount.getPatient().getAge(), 10, 20)) {
            if (isBetween(userAccount.getInvestor().getDebitProfile(), 0, 10) && isBetween(userAccount.getInvestor().getCreditProfile(), 0, 10)) {
                Status = "Broke";
            }else if (isBetween(userAccount.getInvestor().getDebitProfile(), 10, 40) && isBetween(userAccount.getInvestor().getCreditProfile(), 10, 40)) {
                Status = "Need Assitance";
            } else if (isBetween(userAccount.getInvestor().getDebitProfile(), 40, 60) && isBetween(userAccount.getInvestor().getCreditProfile(), 40, 60)) {
                Status = "Doing Okay";
            } else if (isBetween(userAccount.getInvestor().getDebitProfile(), 60, 10000) && isBetween(userAccount.getInvestor().getCreditProfile(), 60, 10000)) {
                Status = "Wonderfull";
            }else
                Status ="You are Awesome";
        } else if (isBetween(userAccount.getPatient().getAge(), 20, 40)) {
            if (isBetween(userAccount.getInvestor().getDebitProfile(), 0, 200) && isBetween(userAccount.getInvestor().getCreditProfile(), 0, 200)) {
                Status = "Broke";
            }else if (isBetween(userAccount.getInvestor().getDebitProfile(), 200, 350) && isBetween(userAccount.getInvestor().getCreditProfile(), 200, 350)) {
                Status = "Need Assitance";
            } else if (isBetween(userAccount.getInvestor().getDebitProfile(), 350, 500) && isBetween(userAccount.getInvestor().getCreditProfile(), 350, 500)) {
                Status = "Doing Okay";
            } else if (isBetween(userAccount.getInvestor().getDebitProfile(), 500, 10000) && isBetween(userAccount.getInvestor().getCreditProfile(), 500, 10000)) {
                Status = "Wonderfull";
            }else
                Status ="You are Awesome";
        } else if (isBetween(userAccount.getPatient().getAge(), 40, 90)) {
            if (isBetween(userAccount.getInvestor().getDebitProfile(), 0, 250) && isBetween(userAccount.getInvestor().getCreditProfile(), 0, 250)) {
                Status = "Broke";
            }else if (isBetween(userAccount.getInvestor().getDebitProfile(), 250, 400) && isBetween(userAccount.getInvestor().getCreditProfile(), 250, 400)) {
                Status = "Need Assitance";
            } else if (isBetween(userAccount.getInvestor().getDebitProfile(), 400, 600) && isBetween(userAccount.getInvestor().getCreditProfile(), 400, 600)) {
                Status = "Doing Okay";
            } else if (isBetween(userAccount.getInvestor().getDebitProfile(), 600, 10000) && isBetween(userAccount.getInvestor().getCreditProfile(), 600, 10000)) {
                Status = "Wonderfull";
            }else
                Status ="You are Awesome";
        }
        return Status;
    }
    private WebPopOver createFinancePopOver() {
        final WebPopOver popOver = new WebPopOver(this);
        popOver.setMargin(10);
        GridLayout grid = new GridLayout(5, 1);
        popOver.setLayout(grid);
        //popOver.setLayout(new BorderLayout(10, 0));
        //popOver.setFocusableWindowState(false);
        popOver.add(new WebLabel("<html><b style=color:blue>Finance Profile</b></html>"), grid);
        popOver.add(new WebLabel("<html><b>Financial Health: </b><i>"+getFinancialHealth() +"</i></html>"), grid);
        popOver.add(new WebLabel("<html><b>Debit Profile:  </b><i>" + userAccount.getInvestor().getDebitProfile() +"</i></html>"), grid);
        popOver.add(new WebLabel("<html><b>Create Profile: </b><i>" + userAccount.getInvestor().getCreditProfile() +"</i></html>"), grid);
        
        popOver.add(new WebButton(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                closePopOverDialogs();
            }
        }).setUndecorated(true), BorderLayout.EAST);
        popOver.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(final WindowEvent e) {
                toClose.remove(popOver);
            }
        });
        return popOver;
    }

    private WebPopOver createHomeMakerPopOver() {
        final WebPopOver popOver = new WebPopOver(this);
        popOver.setMargin(10);
        GridLayout grid = new GridLayout(userAccount.getApplianceDirectory().getApplianceList().size(), 1);
        popOver.setLayout(grid);
        popOver.add(new WebLabel("<html><b style=color:blue>Home Maker Profile</b></html>"), grid);
        popOver.add(new WebLabel("<html><b>Appliance Current Status</b></html>"), grid);
        for (Appliance app1 : userAccount.getApplianceDirectory().getApplianceList()) {
            if (app1.getAppInfo() != null) {
                popOver.add(new WebLabel("<html><b>"+app1.getApplianceName() + " : </b><i>" + app1.getAppInfo()+"</i></html>"), grid);
            }
        }
        popOver.add(new WebButton(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                closePopOverDialogs();
            }
        }).setUndecorated(true), BorderLayout.EAST);
        popOver.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(final WindowEvent e) {
                toClose.remove(popOver);
            }
        });
        return popOver;
    }

    private void closePopOverDialogs() {
        for (final WebPopOver popOver : toClose) {
            popOver.dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private com.alee.laf.button.WebButton webButton1;
    // End of variables declaration//GEN-END:variables
}
