/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorProfile;

import Business.UserAccount.UserAccount;
import Business.WorkRequest.ConsultingWorkRequest;
import Business.WorkRequest.WorkRequest;
import static UserInterface.DoctorProfile.ActivitiesJPanel.getDateDiff;
import java.awt.CardLayout;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class FeedbackJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public FeedbackJPanel(JPanel userProcessContainer, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        
        populateFeedbackTable();
    }
    
      public void populateFeedbackTable(){
        DefaultTableModel model =  (DefaultTableModel)appUserConsultJTable.getModel();
          
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request.getRequestType().equalsIgnoreCase("Consulting")){
            ConsultingWorkRequest cwr = (ConsultingWorkRequest)request;
            Object[] row = new Object[4];
            row[0] = cwr;
//        TableColumn column = appUserConsultJTable.getColumn(new );
//        WebTableCellRenderer renderer = new WebTableCellRenderer ();
//        renderer.setToolTipText (cwr.getConsultingDescription());
//        column.setCellRenderer ( renderer );
            row[1] = cwr.getReceiver().getEmployee().getName();
            row[2]=cwr.getStatus();
            row[3]= getLastModified(cwr.getRequestDate());
            model.addRow(row);
            } ;
        }
    }

      public String getLastModified(Date d){
        String s ="Just Now";
        if(getDateDiff(new Date(),d , TimeUnit.DAYS)<=0){
                 if(getDateDiff(new Date(),d , TimeUnit.HOURS)<=0){
                    s=  String.valueOf(getDateDiff(new Date(), d, TimeUnit.MINUTES)) + " minutes ago";
                 } else
                     s=  String.valueOf(getDateDiff(new Date(), d, TimeUnit.HOURS)) + " hours ago";
        }else
        s = String.valueOf(getDateDiff(new Date(),d , TimeUnit.DAYS)) + " days ago";
        return s;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        appUserConsultJTable = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1025, 682));

        backJButton.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.setPreferredSize(new java.awt.Dimension(100, 25));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        appUserConsultJTable.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        appUserConsultJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "Patient Name", "Status", "Last Consulting"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(appUserConsultJTable);

        btnViewDetails.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        btnViewDetails.setText("View Details");
        btnViewDetails.setPreferredSize(new java.awt.Dimension(200, 25));
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Patient Consultations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(427, 427, 427)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(175, 175, 175)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(226, 226, 226))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed

        int selectedRow = appUserConsultJTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select the message first");
            return;
        }
        ConsultingWorkRequest request = (ConsultingWorkRequest)appUserConsultJTable.getValueAt(selectedRow, 0);
        ViewDetailsJPanel viewDetailsJPanel = new ViewDetailsJPanel(userProcessContainer, request);
        userProcessContainer.add("viewDetailsJPanel", viewDetailsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnViewDetailsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable appUserConsultJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
