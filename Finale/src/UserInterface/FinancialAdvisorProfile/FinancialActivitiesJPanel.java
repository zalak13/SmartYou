/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FinancialAdvisorProfile;

import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.TransactionWorkRequest;
import Business.WorkRequest.WorkQueue;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zak
 */
public class FinancialActivitiesJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private WorkQueue workQueue;
    private UserAccount financialAdvisorUserAccount;
    private UserAccount investorUserAccount;
    private Enterprise enterprise;

    /**
     * Creates new form ActivitiesJPanel
     */
    public FinancialActivitiesJPanel(JPanel upc, UserAccount faua,UserAccount iua , WorkQueue wq) {
        initComponents();
        userProcessContainer = upc;
        financialAdvisorUserAccount = faua;
        investorUserAccount = iua;
        workQueue = wq;
        nameLabel.setText("Investor Name: "+investorUserAccount.getEmployee().getName());
        populateTable();
    }

    public static long getDateDiff(Date date1, Date date2, TimeUnit timeUnit) {
        long diffInMillies = date1.getTime() - date2.getTime();
        return timeUnit.convert(diffInMillies, TimeUnit.MILLISECONDS);
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) activitiesListJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : workQueue.getWorkRequestList()) {
            TransactionWorkRequest twr = (TransactionWorkRequest) request;
            if (twr.getSender().equals(investorUserAccount) && twr.getReceiver().equals(financialAdvisorUserAccount)) {
                Object[] row = new Object[6];
                row[0] = twr;
                row[1] = twr.getTransactionID();
                row[2] = twr.getDebitAmount();
                row[3] = twr.getCreditAmount();
                row[4] = twr.getCreditBilling();
                row[5] = getLastModified(twr.getTxnTimeStamp());
                model.addRow(row);
            }
        }
    }

    public String getLastModified(Date d){
        String s ="Just Now";
        if(getDateDiff(new Date(),d , TimeUnit.DAYS)<=0){
                 if(getDateDiff(new Date(),d , TimeUnit.HOURS)<=0){
                    s=  String.valueOf(getDateDiff(new Date(), d, TimeUnit.MINUTES)) + " minutes ago";
                 } else
                     s=  String.valueOf(getDateDiff(new Date(), d, TimeUnit.HOURS)) + " hours ago";
        }else
        s = String.valueOf(getDateDiff(new Date(),d , TimeUnit.DAYS)) + " days ago";
        return s;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        activitiesListJTable = new javax.swing.JTable();
        nameLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1025, 682));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Activities List");

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        activitiesListJTable.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        activitiesListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Financial Activity", "Transaction ID", "Account Credit", "Account Debit", "Credit Bill", "Last Activity Log"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(activitiesListJTable);

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameLabel.setText("Investor Name: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(jLabel1))
                            .addComponent(nameLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addComponent(btnBack)
                .addGap(202, 202, 202))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activitiesListJTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}
